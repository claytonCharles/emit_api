CREATE TABLE IF NOT EXISTS tb_cpus (
    id INT AUTO_INCREMENT PRIMARY KEY,
    register_user_id VARCHAR(64) NOT NULL,
    brand VARCHAR(30) NOT NULL,
    name VARCHAR(50) NOT NULL,
    performance_core INT(2),
    efficient_core INT(2),
    total_core INT(3),
    total_threads INT(3),
    frequency_performance_base VARCHAR(10),
    frequency_performance_max VARCHAR(10),
    frequency_efficient_base VARCHAR(10),
    frequency_efficient_max VARCHAR(10),
    cache VARCHAR(5),
    cache_l2 VARCHAR(5),
    psu_base VARCHAR(3),
    psu_max VARCHAR(3),
    photo VARCHAR(255),
    active BOOLEAN DEFAULT true,
    register_date DATETIME NOT NULL DEFAULT NOW(),
    CONSTRAINT FK_register_user_id FOREIGN KEY (register_user_id) REFERENCES tb_users(id)
);

CREATE TABLE IF NOT EXISTS rtb_cpus (
    id INT AUTO_INCREMENT PRIMARY KEY,
    cpu_id INT NOT NULL,
    register_user_id VARCHAR(64) NOT NULL,
    brand VARCHAR(30) NOT NULL,
    name VARCHAR(50) NOT NULL,
    performance_core INT(2),
    efficient_core INT(2),
    total_core INT(3),
    total_threads INT(3),
    frequency_performance_base VARCHAR(10),
    frequency_performance_max VARCHAR(10),
    frequency_efficient_base VARCHAR(10),
    frequency_efficient_max VARCHAR(10),
    cache VARCHAR(5),
    cache_l2 VARCHAR(5),
    psu_base VARCHAR(3),
    psu_max VARCHAR(3),
    photo VARCHAR(255),
    active BOOLEAN DEFAULT true,
    register_date DATETIME NOT NULL,
    CONSTRAINT FK_cpu_id FOREIGN KEY (cpu_id) REFERENCES tb_cpus(id),
    CONSTRAINT RFK_register_user_id FOREIGN KEY (register_user_id) REFERENCES tb_users(id)
);

CREATE TRIGGER IF NOT EXISTS record_tb_cpu AFTER UPDATE ON tb_cpus FOR EACH ROW INSERT INTO rtb_cpus (
    cpu_id,
    register_user_id,
    brand,
    name,
    performance_core,
    efficient_core,
    total_core,
    total_threads,
    frequency_performance_base,
    frequency_performance_max,
    frequency_efficient_base,
    frequency_efficient_max,
    cache,
    cache_l2,
    psu_base,
    psu_max,
    photo,
    active,
    register_date
) VALUES (
    OLD.id,
    OLD.register_user_id,
    OLD.brand,
    OLD.name,
    OLD.performance_core,
    OLD.efficient_core,
    OLD.total_core,
    OLD.total_threads,
    OLD.frequency_performance_base,
    OLD.frequency_performance_max,
    OLD.frequency_efficient_base,
    OLD.frequency_efficient_max,
    OLD.cache,
    OLD.cache_l2,
    OLD.psu_base,
    OLD.psu_max,
    OLD.photo,
    OLD.active,
    OLD.register_date
);